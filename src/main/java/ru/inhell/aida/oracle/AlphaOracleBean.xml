<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.inhell.aida.oracle.AlphaOracleBean">
    <resultMap id="alphaOracleResultMap" type="ru.inhell.aida.entity.AlphaOracle">
        <id column="id" property="id"/>
        <result column="price" property="price"/>
        <result column="prediction" property="prediction"/>
        <result column="price_type" property="priceType"/>
        <result column="stop_price" property="stopPrice"/>
        <result column="stop_type" property="stopType"/>
        <result column="stop_factor" property="stopFactor"/>
        <result column="stop_count" property="stopCount"/>
        <result column="max_stop_count" property="maxStopCount"/>
        <result column="score" property="score"/>
        <result column="status" property="status"/>

        <association column="vector_forecast_id" property="vectorForecast" select="selectVectorForecast"/>
    </resultMap>

    <resultMap id="alphaOracleDataResultMap" type="ru.inhell.aida.entity.AlphaOracleData">
        <id column="id" property="id"/>
        <result column="alpha_oracle_id" property="alphaOracleId"/>
        <result column="date" property="date"/>
        <result column="price" property="price"/>
        <result column="prediction" property="prediction"/>
    </resultMap>

    <resultMap id="alphaOracleScoreResultMap" type="ru.inhell.aida.entity.AlphaOracleScore">
        <id column="id" property="id"/>
        <result column="alpha_oracle_id" property="alphaOracleId"/>
        <result column="day" property="day"/>
        <result column="score" property="score"/>
        <result column="max" property="max"/>
        <result column="min" property="min"/>
    </resultMap>

    <select id="selectAlphaOracle" resultMap="alphaOracleResultMap" parameterType="long">
        select * from `alpha_oracle` where `id` = #{id}
    </select>

    <select id="selectAlphaOracles" resultMap="alphaOracleResultMap">
        select * from `alpha_oracle`
    </select>

    <select id="selectAlphaOracleDatas" resultMap="alphaOracleDataResultMap" parameterType="ru.inhell.aida.entity.AlphaOracleFilter">
        select * from `alpha_oracle_data` where `alpha_oracle_id` = #{id} and `date` between #{startDate} and #{endDate}
            order by `date` asc
    </select>

    <insert id="insertAlphaOracle" parameterType="ru.inhell.aida.entity.AlphaOracle">
        insert into `alpha_oracle` (`id`, `vector_forecast_id`, `created`)
            values (#{id}, #{vectorForecastId}, #{created})
    </insert>

    <insert id="insertAlphaOracleData" parameterType="ru.inhell.aida.entity.AlphaOracleData">
        insert into `alpha_oracle_data` (`id`, `alpha_oracle_id`, `date`, `price`, `prediction`)
            values (#{id}, #{alphaOracleId}, #{date}, #{price}, #{prediction})
    </insert>

    <select id="selectIsAlphaOracleDataExists" resultType="boolean" parameterType="map">
        select count(*) > 0 from `alpha_oracle_data` where `alpha_oracle_id` = #{alphaOracleId} and `date` = #{date}
    </select>

    <update id="updateAlphaOracle" parameterType="ru.inhell.aida.entity.AlphaOracle">
        update `alpha_oracle` set `price` = #{price}, `prediction` = #{prediction}, `score` = #{score},
            `stop_price` = #{stopPrice}, `stop_count` = #{stopCount} where `id` = #{id}
    </update>

    <select id="selectScores" parameterType="ru.inhell.aida.entity.AlphaOracleFilter" resultMap="alphaOracleScoreResultMap">
        select * from `alpha_oracle_score` where `alpha_oracle_id` = #{id} and `date` between #{startDate} and #{endDate}
    </select>

    <insert id="insertAlphaOracleScore" parameterType="ru.inhell.aida.entity.AlphaOracleScore">
        insert into `alpha_oracle_score` (`alpha_oracle_id`, `day`, `max`, `min`, `score`)
            values (#{alphaOracleId}, #{day}, #{max}, #{min}, #{score})
    </insert>
</mapper>