<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.inhell.aida.oracle.VectorForecastBean">
    <resultMap id="vectorForecastResultMap" type="ru.inhell.aida.entity.VectorForecast">
        <id column="id" property="id"/>
        <result column="symbol" property="symbol"/>
        <result column="interval" property="interval"/>
        <result column="n" property="n"/>
        <result column="l" property="l"/>
        <result column="p" property="p"/>
        <result column="m" property="m"/>
        <result column="created" property="created"/>
    </resultMap>

    <resultMap id="vectorForecastDataResultMap" type="ru.inhell.aida.entity.VectorForecastData">
        <id column="id" property="id"/>
        <result column="vector_forecast_id" property="vectorForecastId"/>
        <result column="date" property="date"/>
        <result column="index" property="index"/>
        <result column="index_date" property="indexDate"/>
        <result column="price" property="price"/>
        <result column="type" property="type"/>
    </resultMap>

    <select id="selectVectorForecast" parameterType="long" resultMap="vectorForecastResultMap">
        select * from `vector_forecast` where `id` = #{id}
    </select>

    <select id="selectVectorForecasts" parameterType="ru.inhell.aida.entity.VectorForecastFilter"
            resultMap="vectorForecastResultMap">
        select * from `vector_forecast`
        <where>
            <if test="symbol != null">`symbol` = #{symbol}</if>
            <if test="interval != null">`interval` = #{interval}</if>
            <if test="n != null">`n` = #{n}</if>
            <if test="l != null">`l` = #{l}</if>
            <if test="p != null">`p` = #{p}</if>
            <if test="m != null">`m` = #{m}</if>
        </where>
    </select>

    <select id="selectVectorForecastData" parameterType="ru.inhell.aida.entity.VectorForecastFilter"
            resultMap="vectorForecastDataResultMap">
           select * from `vector_forecast_data`
            <where>
                <if test="id != null">`vector_forecast_id` = #{id}</if>
                <if test="startDate != null">and `date` >= #{startDate}</if>
            </where>
    </select>

    <select id="selectVectorForecastDataCount" parameterType="ru.inhell.aida.entity.VectorForecastFilter" resultType="long">
        select count(*) from `vector_forecast_data` where `vector_forecast_id` = #{id}
    </select>

    <insert id="insertVectorForecast" parameterType="ru.inhell.aida.entity.VectorForecast" useGeneratedKeys="true"
            keyProperty="id">
        insert into `vector_forecast` (`symbol`, `interval`, `n`, `l`, `p`, `m`, `created`)
            value (#{symbol}, #{interval}, #{n}, #{l}, #{p}, #{m}, #{created})
    </insert>

    <insert id="insertVectorForecastData" parameterType="list">
        insert into vector_forecast_data (`vector_forecast_id`, `date`, `index`, `index_date`, `price`, `type`)
        values
        <foreach collection="list" separator="," item="item">
            (#{item.vectorForecastId}, #{item.date}, #{item.index}, #{item.indexDate}, #{item.price}, #{item.type})
        </foreach>
    </insert>

    <update id="updateVectorForecastData" parameterType="ru.inhell.aida.entity.VectorForecastData">
        update `vector_forecast_data` set `type` = #{type} where `id` = #{id}
    </update>

    <select id="selectLastVectorForecastDataDate" parameterType="long" resultType="date">
        select max(`date`) from `vector_forecast_data` where `vector_forecast_id` = #{vectorForecastId}
    </select>
</mapper>
